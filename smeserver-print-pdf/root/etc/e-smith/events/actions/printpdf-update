package esmith;

use strict;
use Errno;
use esmith::ConfigDB;
use esmith::AccountsDB;
use esmith::templates;
use User::pwent;


my $accountsdb = esmith::AccountsDB->open_ro or
    die "Could not open accounts db\n";

my $event = shift;
my $userName = shift;
my @users;

if (defined $userName)
{
    my $user = $accountsdb->get($userName);
    die
	"Account $userName is not a user account; update email forwarding failed.\n"
	unless $userName eq 'admin' || ($user && $user->prop('type') eq "user");
    @users = ($user);
}
else
{
    @users = ( $accountsdb->users, $accountsdb->get('admin') );
}

foreach my $user (@users)
{
    my $userName = $user->key;

    setpwent();
    my $home = getpwnam($userName)->dir;
    for my $dotfile ( qw(.fetchmailrc autoprint.sh) )
    {
        esmith::templates::processTemplate (
	{
	    MORE_DATA			=>
		{
		    USERNAME => $userName ,
		},
	    TEMPLATE_PATH		=> "/$dotfile",
	    TEMPLATE_EXPAND_QUEUE	=>
		[
		    "/etc/e-smith/templates-user-custom",
		    "/etc/e-smith/templates-user",
		],
	    OUTPUT_PREFIX		=> "$home",
	    UID				=> $userName,
	    GID				=> $userName,
	    PERMS			=> 0644,
        } );
    };
    unless (-f "$home/.qmail-default")
    {
	symlink ".qmail", "$home/.qmail-default";
    }
}

exit (0);
